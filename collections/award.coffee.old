# @Awards = new Meteor.Collection("awards")
@Awards = new Mongo.Collection("awards");

# x =	
# 	Meteor.users.find().fetch().map (it) ->
# 		label: it.profile.fullName
#   	value: it._id

# z =	
# 	Meteor.users.find().fetch().map (it) ->
# 		it.profile._id

x = ->
	y = Meteor.users.find().fetch().map (it) ->
		label: it.profile.fullName
		value: it._id
	return y
x = x()
console.log x

Awards.attachSchema
	Reason:
		type:String
		label: "What did they do to impress?"
		autoform:
    	afFieldInput:
      	type: "textarea"
      	rows: 6
	createOn: 
		type: Date
		label: "The date the FMYG was awarded"
	Nominees:
	  type: [String]
	  optional: false
	  minCount: 1
	  label: "Nominees"
	  autoform:
	  	options: x
  # "Nominees.$":
	 #  type: String
	 #  autoform:
	 #    options: x






	# Nominee:
	# 	type:Array
 #  	label: "Nominee"
 #  "Nominees.$":
 #  	type:String
	# Reason:
	# 	type:String
	# 	label: "What did they do to impress?"
	# 	autoform:
 #    	afFieldInput:
 #      	type: "textarea"
 #      	rows: 6
	# createOn: 
	# 	type: Date
	# 	label: "The date the FMYG was awarded"



Meteor.methods
	newAward: (award) ->
		if !Meteor.user()
			console.log 'User not logged in'
			throw new Meteor.error 'Not logged in'

		awardId = Award.insert
			Reason: award.Reason
			Nominee: award.Nominee
			Nominator: Meteor.userId()
			CreatedOn: new Date
			
		return awardId